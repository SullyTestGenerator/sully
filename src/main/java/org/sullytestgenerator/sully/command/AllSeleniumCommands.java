/**
 * Copyright 2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sullytestgenerator.sully.command;

/**
 * AllSeleniumCommands - SullyTestGenerator commands based on the Selenium Core reference.html file.
 * 
 * This class is generated by the SeleniumApiReader.java run() method.
 * SeleniumApiReader reads a reference.html file maintained by the Selenium
 * development team and generates a list of wrapper methods for those Selenium
 * commands.
 * 
 * See:
 * https://github.com/SeleniumHQ/selenium/blob/master/ide/main/src/content/selenium-core/reference.html
 * 
 * @author JavaJeffG
 * 
 */
public abstract class AllSeleniumCommands {

   protected abstract void addCommand(String command, String arg1, String arg2);

   protected void command_addLocationStrategy(String strategyName, String functionDefinition) {
      addCommand("addLocationStrategy", strategyName, functionDefinition);
   }

   protected void command_addLocationStrategyAndWait(String strategyName, String functionDefinition) {
      addCommand("addLocationStrategyAndWait", strategyName, functionDefinition);
   }

   protected void command_addScript(String scriptContent, String scriptTagId) {
      addCommand("addScript", scriptContent, scriptTagId);
   }

   protected void command_addScriptAndWait(String scriptContent, String scriptTagId) {
      addCommand("addScriptAndWait", scriptContent, scriptTagId);
   }

   protected void command_addSelection(String locator, String optionLocator) {
      addCommand("addSelection", locator, optionLocator);
   }

   protected void command_addSelectionAndWait(String locator, String optionLocator) {
      addCommand("addSelectionAndWait", locator, optionLocator);
   }

   protected void command_allowNativeXpath(String allow) {
      addCommand("allowNativeXpath", allow, null);
   }

   protected void command_allowNativeXpathAndWait(String allow) {
      addCommand("allowNativeXpathAndWait", allow, null);
   }

   protected void command_altKeyDown() {
      addCommand("altKeyDown", null, null);
   }

   protected void command_altKeyDownAndWait() {
      addCommand("altKeyDownAndWait", null, null);
   }

   protected void command_altKeyUp() {
      addCommand("altKeyUp", null, null);
   }

   protected void command_altKeyUpAndWait() {
      addCommand("altKeyUpAndWait", null, null);
   }

   protected void command_answerOnNextPrompt(String answer) {
      addCommand("answerOnNextPrompt", answer, null);
   }

   protected void command_assertAlert(String pattern) {
      addCommand("assertAlert", pattern, null);
   }

   protected void command_assertAlertNotPresent() {
      addCommand("assertAlertNotPresent", null, null);
   }

   protected void command_assertAlertPresent() {
      addCommand("assertAlertPresent", null, null);
   }

   protected void command_assertAllButtons(String pattern) {
      addCommand("assertAllButtons", pattern, null);
   }

   protected void command_assertAllFields(String pattern) {
      addCommand("assertAllFields", pattern, null);
   }

   protected void command_assertAllLinks(String pattern) {
      addCommand("assertAllLinks", pattern, null);
   }

   protected void command_assertAllWindowIds(String pattern) {
      addCommand("assertAllWindowIds", pattern, null);
   }

   protected void command_assertAllWindowNames(String pattern) {
      addCommand("assertAllWindowNames", pattern, null);
   }

   protected void command_assertAllWindowTitles(String pattern) {
      addCommand("assertAllWindowTitles", pattern, null);
   }

   protected void command_assertAttribute(String attributeLocator, String pattern) {
      addCommand("assertAttribute", attributeLocator, pattern);
   }

   protected void command_assertAttributeFromAllWindows(String attributeName, String pattern) {
      addCommand("assertAttributeFromAllWindows", attributeName, pattern);
   }

   protected void command_assertBodyText(String pattern) {
      addCommand("assertBodyText", pattern, null);
   }

   protected void command_assertChecked(String locator) {
      addCommand("assertChecked", locator, null);
   }

   protected void command_assertConfirmation(String pattern) {
      addCommand("assertConfirmation", pattern, null);
   }

   protected void command_assertConfirmationNotPresent() {
      addCommand("assertConfirmationNotPresent", null, null);
   }

   protected void command_assertConfirmationPresent() {
      addCommand("assertConfirmationPresent", null, null);
   }

   protected void command_assertCookie(String pattern) {
      addCommand("assertCookie", pattern, null);
   }

   protected void command_assertCookieByName(String name, String pattern) {
      addCommand("assertCookieByName", name, pattern);
   }

   protected void command_assertCookieNotPresent(String name) {
      addCommand("assertCookieNotPresent", name, null);
   }

   protected void command_assertCookiePresent(String name) {
      addCommand("assertCookiePresent", name, null);
   }

   protected void command_assertCursorPosition(String locator, String pattern) {
      addCommand("assertCursorPosition", locator, pattern);
   }

   protected void command_assertEditable(String locator) {
      addCommand("assertEditable", locator, null);
   }

   protected void command_assertElementHeight(String locator, String pattern) {
      addCommand("assertElementHeight", locator, pattern);
   }

   protected void command_assertElementIndex(String locator, String pattern) {
      addCommand("assertElementIndex", locator, pattern);
   }

   protected void command_assertElementNotPresent(String locator) {
      addCommand("assertElementNotPresent", locator, null);
   }

   protected void command_assertElementPositionLeft(String locator, String pattern) {
      addCommand("assertElementPositionLeft", locator, pattern);
   }

   protected void command_assertElementPositionTop(String locator, String pattern) {
      addCommand("assertElementPositionTop", locator, pattern);
   }

   protected void command_assertElementPresent(String locator) {
      addCommand("assertElementPresent", locator, null);
   }

   protected void command_assertElementWidth(String locator, String pattern) {
      addCommand("assertElementWidth", locator, pattern);
   }

   protected void command_assertErrorOnNext(String message) {
      addCommand("assertErrorOnNext", message, null);
   }

   protected void command_assertEval(String script, String pattern) {
      addCommand("assertEval", script, pattern);
   }

   protected void command_assertExpression(String expression, String pattern) {
      addCommand("assertExpression", expression, pattern);
   }

   protected void command_assertFailureOnNext(String message) {
      addCommand("assertFailureOnNext", message, null);
   }

   protected void command_assertHtmlSource(String pattern) {
      addCommand("assertHtmlSource", pattern, null);
   }

   protected void command_assertLocation(String pattern) {
      addCommand("assertLocation", pattern, null);
   }

   protected void command_assertMouseSpeed(String pattern) {
      addCommand("assertMouseSpeed", pattern, null);
   }

   protected void command_assertNotAlert(String pattern) {
      addCommand("assertNotAlert", pattern, null);
   }

   protected void command_assertNotAllButtons(String pattern) {
      addCommand("assertNotAllButtons", pattern, null);
   }

   protected void command_assertNotAllFields(String pattern) {
      addCommand("assertNotAllFields", pattern, null);
   }

   protected void command_assertNotAllLinks(String pattern) {
      addCommand("assertNotAllLinks", pattern, null);
   }

   protected void command_assertNotAllWindowIds(String pattern) {
      addCommand("assertNotAllWindowIds", pattern, null);
   }

   protected void command_assertNotAllWindowNames(String pattern) {
      addCommand("assertNotAllWindowNames", pattern, null);
   }

   protected void command_assertNotAllWindowTitles(String pattern) {
      addCommand("assertNotAllWindowTitles", pattern, null);
   }

   protected void command_assertNotAttribute(String attributeLocator, String pattern) {
      addCommand("assertNotAttribute", attributeLocator, pattern);
   }

   protected void command_assertNotAttributeFromAllWindows(String attributeName, String pattern) {
      addCommand("assertNotAttributeFromAllWindows", attributeName, pattern);
   }

   protected void command_assertNotBodyText(String pattern) {
      addCommand("assertNotBodyText", pattern, null);
   }

   protected void command_assertNotChecked(String locator) {
      addCommand("assertNotChecked", locator, null);
   }

   protected void command_assertNotConfirmation(String pattern) {
      addCommand("assertNotConfirmation", pattern, null);
   }

   protected void command_assertNotCookie(String pattern) {
      addCommand("assertNotCookie", pattern, null);
   }

   protected void command_assertNotCookieByName(String name, String pattern) {
      addCommand("assertNotCookieByName", name, pattern);
   }

   protected void command_assertNotCursorPosition(String locator, String pattern) {
      addCommand("assertNotCursorPosition", locator, pattern);
   }

   protected void command_assertNotEditable(String locator) {
      addCommand("assertNotEditable", locator, null);
   }

   protected void command_assertNotElementHeight(String locator, String pattern) {
      addCommand("assertNotElementHeight", locator, pattern);
   }

   protected void command_assertNotElementIndex(String locator, String pattern) {
      addCommand("assertNotElementIndex", locator, pattern);
   }

   protected void command_assertNotElementPositionLeft(String locator, String pattern) {
      addCommand("assertNotElementPositionLeft", locator, pattern);
   }

   protected void command_assertNotElementPositionTop(String locator, String pattern) {
      addCommand("assertNotElementPositionTop", locator, pattern);
   }

   protected void command_assertNotElementWidth(String locator, String pattern) {
      addCommand("assertNotElementWidth", locator, pattern);
   }

   protected void command_assertNotErrorOnNext(String message) {
      addCommand("assertNotErrorOnNext", message, null);
   }

   protected void command_assertNotEval(String script, String pattern) {
      addCommand("assertNotEval", script, pattern);
   }

   protected void command_assertNotExpression(String expression, String pattern) {
      addCommand("assertNotExpression", expression, pattern);
   }

   protected void command_assertNotFailureOnNext(String message) {
      addCommand("assertNotFailureOnNext", message, null);
   }

   protected void command_assertNotHtmlSource(String pattern) {
      addCommand("assertNotHtmlSource", pattern, null);
   }

   protected void command_assertNotLocation(String pattern) {
      addCommand("assertNotLocation", pattern, null);
   }

   protected void command_assertNotMouseSpeed(String pattern) {
      addCommand("assertNotMouseSpeed", pattern, null);
   }

   protected void command_assertNotOrdered(String locator1, String locator2) {
      addCommand("assertNotOrdered", locator1, locator2);
   }

   protected void command_assertNotPrompt(String pattern) {
      addCommand("assertNotPrompt", pattern, null);
   }

   protected void command_assertNotSelectOptions(String selectLocator, String pattern) {
      addCommand("assertNotSelectOptions", selectLocator, pattern);
   }

   protected void command_assertNotSelected(String selectLocator, String optionLocator) {
      addCommand("assertNotSelected", selectLocator, optionLocator);
   }

   protected void command_assertNotSelectedId(String selectLocator, String pattern) {
      addCommand("assertNotSelectedId", selectLocator, pattern);
   }

   protected void command_assertNotSelectedIds(String selectLocator, String pattern) {
      addCommand("assertNotSelectedIds", selectLocator, pattern);
   }

   protected void command_assertNotSelectedIndex(String selectLocator, String pattern) {
      addCommand("assertNotSelectedIndex", selectLocator, pattern);
   }

   protected void command_assertNotSelectedIndexes(String selectLocator, String pattern) {
      addCommand("assertNotSelectedIndexes", selectLocator, pattern);
   }

   protected void command_assertNotSelectedLabel(String selectLocator, String pattern) {
      addCommand("assertNotSelectedLabel", selectLocator, pattern);
   }

   protected void command_assertNotSelectedLabels(String selectLocator, String pattern) {
      addCommand("assertNotSelectedLabels", selectLocator, pattern);
   }

   protected void command_assertNotSelectedValue(String selectLocator, String pattern) {
      addCommand("assertNotSelectedValue", selectLocator, pattern);
   }

   protected void command_assertNotSelectedValues(String selectLocator, String pattern) {
      addCommand("assertNotSelectedValues", selectLocator, pattern);
   }

   protected void command_assertNotSomethingSelected(String selectLocator) {
      addCommand("assertNotSomethingSelected", selectLocator, null);
   }

   protected void command_assertNotSpeed(String pattern) {
      addCommand("assertNotSpeed", pattern, null);
   }

   protected void command_assertNotTable(String tableCellAddress, String pattern) {
      addCommand("assertNotTable", tableCellAddress, pattern);
   }

   protected void command_assertNotText(String locator, String pattern) {
      addCommand("assertNotText", locator, pattern);
   }

   protected void command_assertNotTitle(String pattern) {
      addCommand("assertNotTitle", pattern, null);
   }

   protected void command_assertNotValue(String locator, String pattern) {
      addCommand("assertNotValue", locator, pattern);
   }

   protected void command_assertNotVisible(String locator) {
      addCommand("assertNotVisible", locator, null);
   }

   protected void command_assertNotWhetherThisFrameMatchFrameExpression(String currentFrameString, String target) {
      addCommand("assertNotWhetherThisFrameMatchFrameExpression", currentFrameString, target);
   }

   protected void command_assertNotWhetherThisWindowMatchWindowExpression(String currentWindowString, String target) {
      addCommand("assertNotWhetherThisWindowMatchWindowExpression", currentWindowString, target);
   }

   protected void command_assertNotXpathCount(String xpath, String pattern) {
      addCommand("assertNotXpathCount", xpath, pattern);
   }

   protected void command_assertOrdered(String locator1, String locator2) {
      addCommand("assertOrdered", locator1, locator2);
   }

   protected void command_assertPrompt(String pattern) {
      addCommand("assertPrompt", pattern, null);
   }

   protected void command_assertPromptNotPresent() {
      addCommand("assertPromptNotPresent", null, null);
   }

   protected void command_assertPromptPresent() {
      addCommand("assertPromptPresent", null, null);
   }

   protected void command_assertSelectOptions(String selectLocator, String pattern) {
      addCommand("assertSelectOptions", selectLocator, pattern);
   }

   protected void command_assertSelected(String selectLocator, String optionLocator) {
      addCommand("assertSelected", selectLocator, optionLocator);
   }

   protected void command_assertSelectedId(String selectLocator, String pattern) {
      addCommand("assertSelectedId", selectLocator, pattern);
   }

   protected void command_assertSelectedIds(String selectLocator, String pattern) {
      addCommand("assertSelectedIds", selectLocator, pattern);
   }

   protected void command_assertSelectedIndex(String selectLocator, String pattern) {
      addCommand("assertSelectedIndex", selectLocator, pattern);
   }

   protected void command_assertSelectedIndexes(String selectLocator, String pattern) {
      addCommand("assertSelectedIndexes", selectLocator, pattern);
   }

   protected void command_assertSelectedLabel(String selectLocator, String pattern) {
      addCommand("assertSelectedLabel", selectLocator, pattern);
   }

   protected void command_assertSelectedLabels(String selectLocator, String pattern) {
      addCommand("assertSelectedLabels", selectLocator, pattern);
   }

   protected void command_assertSelectedValue(String selectLocator, String pattern) {
      addCommand("assertSelectedValue", selectLocator, pattern);
   }

   protected void command_assertSelectedValues(String selectLocator, String pattern) {
      addCommand("assertSelectedValues", selectLocator, pattern);
   }

   protected void command_assertSomethingSelected(String selectLocator) {
      addCommand("assertSomethingSelected", selectLocator, null);
   }

   protected void command_assertSpeed(String pattern) {
      addCommand("assertSpeed", pattern, null);
   }

   protected void command_assertTable(String tableCellAddress, String pattern) {
      addCommand("assertTable", tableCellAddress, pattern);
   }

   protected void command_assertText(String locator, String pattern) {
      addCommand("assertText", locator, pattern);
   }

   protected void command_assertTextNotPresent(String pattern) {
      addCommand("assertTextNotPresent", pattern, null);
   }

   protected void command_assertTextPresent(String pattern) {
      addCommand("assertTextPresent", pattern, null);
   }

   protected void command_assertTitle(String pattern) {
      addCommand("assertTitle", pattern, null);
   }

   protected void command_assertValue(String locator, String pattern) {
      addCommand("assertValue", locator, pattern);
   }

   protected void command_assertVisible(String locator) {
      addCommand("assertVisible", locator, null);
   }

   protected void command_assertWhetherThisFrameMatchFrameExpression(String currentFrameString, String target) {
      addCommand("assertWhetherThisFrameMatchFrameExpression", currentFrameString, target);
   }

   protected void command_assertWhetherThisWindowMatchWindowExpression(String currentWindowString, String target) {
      addCommand("assertWhetherThisWindowMatchWindowExpression", currentWindowString, target);
   }

   protected void command_assertXpathCount(String xpath, String pattern) {
      addCommand("assertXpathCount", xpath, pattern);
   }

   protected void command_assignId(String locator, String identifier) {
      addCommand("assignId", locator, identifier);
   }

   protected void command_assignIdAndWait(String locator, String identifier) {
      addCommand("assignIdAndWait", locator, identifier);
   }

   protected void command_break() {
      addCommand("break", null, null);
   }

   protected void command_captureEntirePageScreenshot(String filename, String kwargs) {
      addCommand("captureEntirePageScreenshot", filename, kwargs);
   }

   protected void command_captureEntirePageScreenshotAndWait(String filename, String kwargs) {
      addCommand("captureEntirePageScreenshotAndWait", filename, kwargs);
   }

   protected void command_check(String locator) {
      addCommand("check", locator, null);
   }

   protected void command_checkAndWait(String locator) {
      addCommand("checkAndWait", locator, null);
   }

   protected void command_chooseCancelOnNextConfirmation() {
      addCommand("chooseCancelOnNextConfirmation", null, null);
   }

   protected void command_chooseOkOnNextConfirmation() {
      addCommand("chooseOkOnNextConfirmation", null, null);
   }

   protected void command_chooseOkOnNextConfirmationAndWait() {
      addCommand("chooseOkOnNextConfirmationAndWait", null, null);
   }

   protected void command_click(String locator) {
      addCommand("click", locator, null);
   }

   protected void command_clickAndWait(String locator) {
      addCommand("clickAndWait", locator, null);
   }

   protected void command_clickAt(String locator, String coordString) {
      addCommand("clickAt", locator, coordString);
   }

   protected void command_clickAtAndWait(String locator, String coordString) {
      addCommand("clickAtAndWait", locator, coordString);
   }

   protected void command_close() {
      addCommand("close", null, null);
   }

   protected void command_contextMenu(String locator) {
      addCommand("contextMenu", locator, null);
   }

   protected void command_contextMenuAndWait(String locator) {
      addCommand("contextMenuAndWait", locator, null);
   }

   protected void command_contextMenuAt(String locator, String coordString) {
      addCommand("contextMenuAt", locator, coordString);
   }

   protected void command_contextMenuAtAndWait(String locator, String coordString) {
      addCommand("contextMenuAtAndWait", locator, coordString);
   }

   protected void command_controlKeyDown() {
      addCommand("controlKeyDown", null, null);
   }

   protected void command_controlKeyDownAndWait() {
      addCommand("controlKeyDownAndWait", null, null);
   }

   protected void command_controlKeyUp() {
      addCommand("controlKeyUp", null, null);
   }

   protected void command_controlKeyUpAndWait() {
      addCommand("controlKeyUpAndWait", null, null);
   }

   protected void command_createCookie(String nameValuePair, String optionsString) {
      addCommand("createCookie", nameValuePair, optionsString);
   }

   protected void command_createCookieAndWait(String nameValuePair, String optionsString) {
      addCommand("createCookieAndWait", nameValuePair, optionsString);
   }

   protected void command_deleteAllVisibleCookies() {
      addCommand("deleteAllVisibleCookies", null, null);
   }

   protected void command_deleteAllVisibleCookiesAndWait() {
      addCommand("deleteAllVisibleCookiesAndWait", null, null);
   }

   protected void command_deleteCookie(String name, String optionsString) {
      addCommand("deleteCookie", name, optionsString);
   }

   protected void command_deleteCookieAndWait(String name, String optionsString) {
      addCommand("deleteCookieAndWait", name, optionsString);
   }

   protected void command_deselectPopUp() {
      addCommand("deselectPopUp", null, null);
   }

   protected void command_deselectPopUpAndWait() {
      addCommand("deselectPopUpAndWait", null, null);
   }

   protected void command_doubleClick(String locator) {
      addCommand("doubleClick", locator, null);
   }

   protected void command_doubleClickAndWait(String locator) {
      addCommand("doubleClickAndWait", locator, null);
   }

   protected void command_doubleClickAt(String locator, String coordString) {
      addCommand("doubleClickAt", locator, coordString);
   }

   protected void command_doubleClickAtAndWait(String locator, String coordString) {
      addCommand("doubleClickAtAndWait", locator, coordString);
   }

   protected void command_dragAndDrop(String locator, String movementsString) {
      addCommand("dragAndDrop", locator, movementsString);
   }

   protected void command_dragAndDropAndWait(String locator, String movementsString) {
      addCommand("dragAndDropAndWait", locator, movementsString);
   }

   protected void command_dragAndDropToObject(String locatorOfObjectToBeDragged, String locatorOfDragDestinationObject) {
      addCommand("dragAndDropToObject", locatorOfObjectToBeDragged, locatorOfDragDestinationObject);
   }

   protected void command_dragAndDropToObjectAndWait(String locatorOfObjectToBeDragged, String locatorOfDragDestinationObject) {
      addCommand("dragAndDropToObjectAndWait", locatorOfObjectToBeDragged, locatorOfDragDestinationObject);
   }

   protected void command_dragdrop(String locator, String movementsString) {
      addCommand("dragdrop", locator, movementsString);
   }

   protected void command_dragdropAndWait(String locator, String movementsString) {
      addCommand("dragdropAndWait", locator, movementsString);
   }

   protected void command_echo(String message) {
      addCommand("echo", message, null);
   }

   protected void command_fireEvent(String locator, String eventName) {
      addCommand("fireEvent", locator, eventName);
   }

   protected void command_fireEventAndWait(String locator, String eventName) {
      addCommand("fireEventAndWait", locator, eventName);
   }

   protected void command_focus(String locator) {
      addCommand("focus", locator, null);
   }

   protected void command_focusAndWait(String locator) {
      addCommand("focusAndWait", locator, null);
   }

   protected void command_goBack() {
      addCommand("goBack", null, null);
   }

   protected void command_goBackAndWait() {
      addCommand("goBackAndWait", null, null);
   }

   protected void command_highlight(String locator) {
      addCommand("highlight", locator, null);
   }

   protected void command_highlightAndWait(String locator) {
      addCommand("highlightAndWait", locator, null);
   }

   protected void command_ignoreAttributesWithoutValue(String ignore) {
      addCommand("ignoreAttributesWithoutValue", ignore, null);
   }

   protected void command_ignoreAttributesWithoutValueAndWait(String ignore) {
      addCommand("ignoreAttributesWithoutValueAndWait", ignore, null);
   }

   protected void command_keyDown(String locator, String keySequence) {
      addCommand("keyDown", locator, keySequence);
   }

   protected void command_keyDownAndWait(String locator, String keySequence) {
      addCommand("keyDownAndWait", locator, keySequence);
   }

   protected void command_keyPress(String locator, String keySequence) {
      addCommand("keyPress", locator, keySequence);
   }

   protected void command_keyPressAndWait(String locator, String keySequence) {
      addCommand("keyPressAndWait", locator, keySequence);
   }

   protected void command_keyUp(String locator, String keySequence) {
      addCommand("keyUp", locator, keySequence);
   }

   protected void command_keyUpAndWait(String locator, String keySequence) {
      addCommand("keyUpAndWait", locator, keySequence);
   }

   protected void command_metaKeyDown() {
      addCommand("metaKeyDown", null, null);
   }

   protected void command_metaKeyDownAndWait() {
      addCommand("metaKeyDownAndWait", null, null);
   }

   protected void command_metaKeyUp() {
      addCommand("metaKeyUp", null, null);
   }

   protected void command_metaKeyUpAndWait() {
      addCommand("metaKeyUpAndWait", null, null);
   }

   protected void command_mouseDown(String locator) {
      addCommand("mouseDown", locator, null);
   }

   protected void command_mouseDownAndWait(String locator) {
      addCommand("mouseDownAndWait", locator, null);
   }

   protected void command_mouseDownAt(String locator, String coordString) {
      addCommand("mouseDownAt", locator, coordString);
   }

   protected void command_mouseDownAtAndWait(String locator, String coordString) {
      addCommand("mouseDownAtAndWait", locator, coordString);
   }

   protected void command_mouseDownRight(String locator) {
      addCommand("mouseDownRight", locator, null);
   }

   protected void command_mouseDownRightAndWait(String locator) {
      addCommand("mouseDownRightAndWait", locator, null);
   }

   protected void command_mouseDownRightAt(String locator, String coordString) {
      addCommand("mouseDownRightAt", locator, coordString);
   }

   protected void command_mouseDownRightAtAndWait(String locator, String coordString) {
      addCommand("mouseDownRightAtAndWait", locator, coordString);
   }

   protected void command_mouseMove(String locator) {
      addCommand("mouseMove", locator, null);
   }

   protected void command_mouseMoveAndWait(String locator) {
      addCommand("mouseMoveAndWait", locator, null);
   }

   protected void command_mouseMoveAt(String locator, String coordString) {
      addCommand("mouseMoveAt", locator, coordString);
   }

   protected void command_mouseMoveAtAndWait(String locator, String coordString) {
      addCommand("mouseMoveAtAndWait", locator, coordString);
   }

   protected void command_mouseOut(String locator) {
      addCommand("mouseOut", locator, null);
   }

   protected void command_mouseOutAndWait(String locator) {
      addCommand("mouseOutAndWait", locator, null);
   }

   protected void command_mouseOver(String locator) {
      addCommand("mouseOver", locator, null);
   }

   protected void command_mouseOverAndWait(String locator) {
      addCommand("mouseOverAndWait", locator, null);
   }

   protected void command_mouseUp(String locator) {
      addCommand("mouseUp", locator, null);
   }

   protected void command_mouseUpAndWait(String locator) {
      addCommand("mouseUpAndWait", locator, null);
   }

   protected void command_mouseUpAt(String locator, String coordString) {
      addCommand("mouseUpAt", locator, coordString);
   }

   protected void command_mouseUpAtAndWait(String locator, String coordString) {
      addCommand("mouseUpAtAndWait", locator, coordString);
   }

   protected void command_mouseUpRight(String locator) {
      addCommand("mouseUpRight", locator, null);
   }

   protected void command_mouseUpRightAndWait(String locator) {
      addCommand("mouseUpRightAndWait", locator, null);
   }

   protected void command_mouseUpRightAt(String locator, String coordString) {
      addCommand("mouseUpRightAt", locator, coordString);
   }

   protected void command_mouseUpRightAtAndWait(String locator, String coordString) {
      addCommand("mouseUpRightAtAndWait", locator, coordString);
   }

   protected void command_open(String url) {
      addCommand("open", url, null);
   }

   protected void command_openWindow(String url, String windowID) {
      addCommand("openWindow", url, windowID);
   }

   protected void command_openWindowAndWait(String url, String windowID) {
      addCommand("openWindowAndWait", url, windowID);
   }

   protected void command_pause(String waitTime) {
      addCommand("pause", waitTime, null);
   }

   protected void command_refresh() {
      addCommand("refresh", null, null);
   }

   protected void command_refreshAndWait() {
      addCommand("refreshAndWait", null, null);
   }

   protected void command_removeAllSelections(String locator) {
      addCommand("removeAllSelections", locator, null);
   }

   protected void command_removeAllSelectionsAndWait(String locator) {
      addCommand("removeAllSelectionsAndWait", locator, null);
   }

   protected void command_removeScript(String scriptTagId) {
      addCommand("removeScript", scriptTagId, null);
   }

   protected void command_removeScriptAndWait(String scriptTagId) {
      addCommand("removeScriptAndWait", scriptTagId, null);
   }

   protected void command_removeSelection(String locator, String optionLocator) {
      addCommand("removeSelection", locator, optionLocator);
   }

   protected void command_removeSelectionAndWait(String locator, String optionLocator) {
      addCommand("removeSelectionAndWait", locator, optionLocator);
   }

   protected void command_rollup(String rollupName, String kwargs) {
      addCommand("rollup", rollupName, kwargs);
   }

   protected void command_rollupAndWait(String rollupName, String kwargs) {
      addCommand("rollupAndWait", rollupName, kwargs);
   }

   protected void command_runScript(String script) {
      addCommand("runScript", script, null);
   }

   protected void command_runScriptAndWait(String script) {
      addCommand("runScriptAndWait", script, null);
   }

   protected void command_select(String selectLocator, String optionLocator) {
      addCommand("select", selectLocator, optionLocator);
   }

   protected void command_selectAndWait(String selectLocator, String optionLocator) {
      addCommand("selectAndWait", selectLocator, optionLocator);
   }

   protected void command_selectFrame(String locator) {
      addCommand("selectFrame", locator, null);
   }

   protected void command_selectPopUp(String windowID) {
      addCommand("selectPopUp", windowID, null);
   }

   protected void command_selectPopUpAndWait(String windowID) {
      addCommand("selectPopUpAndWait", windowID, null);
   }

   protected void command_selectWindow(String windowID) {
      addCommand("selectWindow", windowID, null);
   }

   protected void command_sendKeys(String locator, String value) {
      addCommand("sendKeys", locator, value);
   }

   protected void command_sendKeysAndWait(String locator, String value) {
      addCommand("sendKeysAndWait", locator, value);
   }

   protected void command_setBrowserLogLevel(String logLevel) {
      addCommand("setBrowserLogLevel", logLevel, null);
   }

   protected void command_setBrowserLogLevelAndWait(String logLevel) {
      addCommand("setBrowserLogLevelAndWait", logLevel, null);
   }

   protected void command_setCursorPosition(String locator, String position) {
      addCommand("setCursorPosition", locator, position);
   }

   protected void command_setCursorPositionAndWait(String locator, String position) {
      addCommand("setCursorPositionAndWait", locator, position);
   }

   protected void command_setMouseSpeed(String pixels) {
      addCommand("setMouseSpeed", pixels, null);
   }

   protected void command_setMouseSpeedAndWait(String pixels) {
      addCommand("setMouseSpeedAndWait", pixels, null);
   }

   protected void command_setSpeed(String value) {
      addCommand("setSpeed", value, null);
   }

   protected void command_setSpeedAndWait(String value) {
      addCommand("setSpeedAndWait", value, null);
   }

   protected void command_setTimeout(String timeout) {
      addCommand("setTimeout", timeout, null);
   }

   protected void command_shiftKeyDown() {
      addCommand("shiftKeyDown", null, null);
   }

   protected void command_shiftKeyDownAndWait() {
      addCommand("shiftKeyDownAndWait", null, null);
   }

   protected void command_shiftKeyUp() {
      addCommand("shiftKeyUp", null, null);
   }

   protected void command_shiftKeyUpAndWait() {
      addCommand("shiftKeyUpAndWait", null, null);
   }

   protected void command_store(String expression, String variableName) {
      addCommand("store", expression, variableName);
   }

   protected void command_storeAlert(String variableName) {
      addCommand("storeAlert", variableName, null);
   }

   protected void command_storeAlertPresent(String variableName) {
      addCommand("storeAlertPresent", variableName, null);
   }

   protected void command_storeAllButtons(String variableName) {
      addCommand("storeAllButtons", variableName, null);
   }

   protected void command_storeAllFields(String variableName) {
      addCommand("storeAllFields", variableName, null);
   }

   protected void command_storeAllLinks(String variableName) {
      addCommand("storeAllLinks", variableName, null);
   }

   protected void command_storeAllWindowIds(String variableName) {
      addCommand("storeAllWindowIds", variableName, null);
   }

   protected void command_storeAllWindowNames(String variableName) {
      addCommand("storeAllWindowNames", variableName, null);
   }

   protected void command_storeAllWindowTitles(String variableName) {
      addCommand("storeAllWindowTitles", variableName, null);
   }

   protected void command_storeAttribute(String attributeLocator, String variableName) {
      addCommand("storeAttribute", attributeLocator, variableName);
   }

   protected void command_storeAttributeFromAllWindows(String attributeName, String variableName) {
      addCommand("storeAttributeFromAllWindows", attributeName, variableName);
   }

   protected void command_storeBodyText(String variableName) {
      addCommand("storeBodyText", variableName, null);
   }

   protected void command_storeChecked(String locator, String variableName) {
      addCommand("storeChecked", locator, variableName);
   }

   protected void command_storeConfirmation(String variableName) {
      addCommand("storeConfirmation", variableName, null);
   }

   protected void command_storeConfirmationPresent(String variableName) {
      addCommand("storeConfirmationPresent", variableName, null);
   }

   protected void command_storeCookie(String variableName) {
      addCommand("storeCookie", variableName, null);
   }

   protected void command_storeCookieByName(String name, String variableName) {
      addCommand("storeCookieByName", name, variableName);
   }

   protected void command_storeCookiePresent(String name, String variableName) {
      addCommand("storeCookiePresent", name, variableName);
   }

   protected void command_storeCursorPosition(String locator, String variableName) {
      addCommand("storeCursorPosition", locator, variableName);
   }

   protected void command_storeEditable(String locator, String variableName) {
      addCommand("storeEditable", locator, variableName);
   }

   protected void command_storeElementHeight(String locator, String variableName) {
      addCommand("storeElementHeight", locator, variableName);
   }

   protected void command_storeElementIndex(String locator, String variableName) {
      addCommand("storeElementIndex", locator, variableName);
   }

   protected void command_storeElementPositionLeft(String locator, String variableName) {
      addCommand("storeElementPositionLeft", locator, variableName);
   }

   protected void command_storeElementPositionTop(String locator, String variableName) {
      addCommand("storeElementPositionTop", locator, variableName);
   }

   protected void command_storeElementPresent(String locator, String variableName) {
      addCommand("storeElementPresent", locator, variableName);
   }

   protected void command_storeElementWidth(String locator, String variableName) {
      addCommand("storeElementWidth", locator, variableName);
   }

   protected void command_storeEval(String script, String variableName) {
      addCommand("storeEval", script, variableName);
   }

   protected void command_storeExpression(String expression, String variableName) {
      addCommand("storeExpression", expression, variableName);
   }

   protected void command_storeHtmlSource(String variableName) {
      addCommand("storeHtmlSource", variableName, null);
   }

   protected void command_storeLocation(String variableName) {
      addCommand("storeLocation", variableName, null);
   }

   protected void command_storeMouseSpeed(String variableName) {
      addCommand("storeMouseSpeed", variableName, null);
   }

   protected void command_storeOrdered(String locator1, String locator2) {
      addCommand("storeOrdered", locator1, locator2);
   }

   protected void command_storePrompt(String variableName) {
      addCommand("storePrompt", variableName, null);
   }

   protected void command_storePromptPresent(String variableName) {
      addCommand("storePromptPresent", variableName, null);
   }

   protected void command_storeSelectOptions(String selectLocator, String variableName) {
      addCommand("storeSelectOptions", selectLocator, variableName);
   }

   protected void command_storeSelectedId(String selectLocator, String variableName) {
      addCommand("storeSelectedId", selectLocator, variableName);
   }

   protected void command_storeSelectedIds(String selectLocator, String variableName) {
      addCommand("storeSelectedIds", selectLocator, variableName);
   }

   protected void command_storeSelectedIndex(String selectLocator, String variableName) {
      addCommand("storeSelectedIndex", selectLocator, variableName);
   }

   protected void command_storeSelectedIndexes(String selectLocator, String variableName) {
      addCommand("storeSelectedIndexes", selectLocator, variableName);
   }

   protected void command_storeSelectedLabel(String selectLocator, String variableName) {
      addCommand("storeSelectedLabel", selectLocator, variableName);
   }

   protected void command_storeSelectedLabels(String selectLocator, String variableName) {
      addCommand("storeSelectedLabels", selectLocator, variableName);
   }

   protected void command_storeSelectedValue(String selectLocator, String variableName) {
      addCommand("storeSelectedValue", selectLocator, variableName);
   }

   protected void command_storeSelectedValues(String selectLocator, String variableName) {
      addCommand("storeSelectedValues", selectLocator, variableName);
   }

   protected void command_storeSomethingSelected(String selectLocator, String variableName) {
      addCommand("storeSomethingSelected", selectLocator, variableName);
   }

   protected void command_storeSpeed(String variableName) {
      addCommand("storeSpeed", variableName, null);
   }

   protected void command_storeTable(String tableCellAddress, String variableName) {
      addCommand("storeTable", tableCellAddress, variableName);
   }

   protected void command_storeText(String locator, String variableName) {
      addCommand("storeText", locator, variableName);
   }

   protected void command_storeTextPresent(String pattern, String variableName) {
      addCommand("storeTextPresent", pattern, variableName);
   }

   protected void command_storeTitle(String variableName) {
      addCommand("storeTitle", variableName, null);
   }

   protected void command_storeValue(String locator, String variableName) {
      addCommand("storeValue", locator, variableName);
   }

   protected void command_storeVisible(String locator, String variableName) {
      addCommand("storeVisible", locator, variableName);
   }

   protected void command_storeWhetherThisFrameMatchFrameExpression(String currentFrameString, String target) {
      addCommand("storeWhetherThisFrameMatchFrameExpression", currentFrameString, target);
   }

   protected void command_storeWhetherThisWindowMatchWindowExpression(String currentWindowString, String target) {
      addCommand("storeWhetherThisWindowMatchWindowExpression", currentWindowString, target);
   }

   protected void command_storeXpathCount(String xpath, String variableName) {
      addCommand("storeXpathCount", xpath, variableName);
   }

   protected void command_submit(String formLocator) {
      addCommand("submit", formLocator, null);
   }

   protected void command_submitAndWait(String formLocator) {
      addCommand("submitAndWait", formLocator, null);
   }

   protected void command_type(String locator, String value) {
      addCommand("type", locator, value);
   }

   protected void command_typeAndWait(String locator, String value) {
      addCommand("typeAndWait", locator, value);
   }

   protected void command_typeKeys(String locator, String value) {
      addCommand("typeKeys", locator, value);
   }

   protected void command_typeKeysAndWait(String locator, String value) {
      addCommand("typeKeysAndWait", locator, value);
   }

   protected void command_uncheck(String locator) {
      addCommand("uncheck", locator, null);
   }

   protected void command_uncheckAndWait(String locator) {
      addCommand("uncheckAndWait", locator, null);
   }

   protected void command_useXpathLibrary(String libraryName) {
      addCommand("useXpathLibrary", libraryName, null);
   }

   protected void command_useXpathLibraryAndWait(String libraryName) {
      addCommand("useXpathLibraryAndWait", libraryName, null);
   }

   protected void command_verifyAlert(String pattern) {
      addCommand("verifyAlert", pattern, null);
   }

   protected void command_verifyAlertNotPresent() {
      addCommand("verifyAlertNotPresent", null, null);
   }

   protected void command_verifyAlertPresent() {
      addCommand("verifyAlertPresent", null, null);
   }

   protected void command_verifyAllButtons(String pattern) {
      addCommand("verifyAllButtons", pattern, null);
   }

   protected void command_verifyAllFields(String pattern) {
      addCommand("verifyAllFields", pattern, null);
   }

   protected void command_verifyAllLinks(String pattern) {
      addCommand("verifyAllLinks", pattern, null);
   }

   protected void command_verifyAllWindowIds(String pattern) {
      addCommand("verifyAllWindowIds", pattern, null);
   }

   protected void command_verifyAllWindowNames(String pattern) {
      addCommand("verifyAllWindowNames", pattern, null);
   }

   protected void command_verifyAllWindowTitles(String pattern) {
      addCommand("verifyAllWindowTitles", pattern, null);
   }

   protected void command_verifyAttribute(String attributeLocator, String pattern) {
      addCommand("verifyAttribute", attributeLocator, pattern);
   }

   protected void command_verifyAttributeFromAllWindows(String attributeName, String pattern) {
      addCommand("verifyAttributeFromAllWindows", attributeName, pattern);
   }

   protected void command_verifyBodyText(String pattern) {
      addCommand("verifyBodyText", pattern, null);
   }

   protected void command_verifyChecked(String locator) {
      addCommand("verifyChecked", locator, null);
   }

   protected void command_verifyConfirmation(String pattern) {
      addCommand("verifyConfirmation", pattern, null);
   }

   protected void command_verifyConfirmationNotPresent() {
      addCommand("verifyConfirmationNotPresent", null, null);
   }

   protected void command_verifyConfirmationPresent() {
      addCommand("verifyConfirmationPresent", null, null);
   }

   protected void command_verifyCookie(String pattern) {
      addCommand("verifyCookie", pattern, null);
   }

   protected void command_verifyCookieByName(String name, String pattern) {
      addCommand("verifyCookieByName", name, pattern);
   }

   protected void command_verifyCookieNotPresent(String name) {
      addCommand("verifyCookieNotPresent", name, null);
   }

   protected void command_verifyCookiePresent(String name) {
      addCommand("verifyCookiePresent", name, null);
   }

   protected void command_verifyCursorPosition(String locator, String pattern) {
      addCommand("verifyCursorPosition", locator, pattern);
   }

   protected void command_verifyEditable(String locator) {
      addCommand("verifyEditable", locator, null);
   }

   protected void command_verifyElementHeight(String locator, String pattern) {
      addCommand("verifyElementHeight", locator, pattern);
   }

   protected void command_verifyElementIndex(String locator, String pattern) {
      addCommand("verifyElementIndex", locator, pattern);
   }

   protected void command_verifyElementNotPresent(String locator) {
      addCommand("verifyElementNotPresent", locator, null);
   }

   protected void command_verifyElementPositionLeft(String locator, String pattern) {
      addCommand("verifyElementPositionLeft", locator, pattern);
   }

   protected void command_verifyElementPositionTop(String locator, String pattern) {
      addCommand("verifyElementPositionTop", locator, pattern);
   }

   protected void command_verifyElementPresent(String locator) {
      addCommand("verifyElementPresent", locator, null);
   }

   protected void command_verifyElementWidth(String locator, String pattern) {
      addCommand("verifyElementWidth", locator, pattern);
   }

   protected void command_verifyErrorOnNext(String message) {
      addCommand("verifyErrorOnNext", message, null);
   }

   protected void command_verifyEval(String script, String pattern) {
      addCommand("verifyEval", script, pattern);
   }

   protected void command_verifyExpression(String expression, String pattern) {
      addCommand("verifyExpression", expression, pattern);
   }

   protected void command_verifyFailureOnNext(String message) {
      addCommand("verifyFailureOnNext", message, null);
   }

   protected void command_verifyHtmlSource(String pattern) {
      addCommand("verifyHtmlSource", pattern, null);
   }

   protected void command_verifyLocation(String pattern) {
      addCommand("verifyLocation", pattern, null);
   }

   protected void command_verifyMouseSpeed(String pattern) {
      addCommand("verifyMouseSpeed", pattern, null);
   }

   protected void command_verifyNotAlert(String pattern) {
      addCommand("verifyNotAlert", pattern, null);
   }

   protected void command_verifyNotAllButtons(String pattern) {
      addCommand("verifyNotAllButtons", pattern, null);
   }

   protected void command_verifyNotAllFields(String pattern) {
      addCommand("verifyNotAllFields", pattern, null);
   }

   protected void command_verifyNotAllLinks(String pattern) {
      addCommand("verifyNotAllLinks", pattern, null);
   }

   protected void command_verifyNotAllWindowIds(String pattern) {
      addCommand("verifyNotAllWindowIds", pattern, null);
   }

   protected void command_verifyNotAllWindowNames(String pattern) {
      addCommand("verifyNotAllWindowNames", pattern, null);
   }

   protected void command_verifyNotAllWindowTitles(String pattern) {
      addCommand("verifyNotAllWindowTitles", pattern, null);
   }

   protected void command_verifyNotAttribute(String attributeLocator, String pattern) {
      addCommand("verifyNotAttribute", attributeLocator, pattern);
   }

   protected void command_verifyNotAttributeFromAllWindows(String attributeName, String pattern) {
      addCommand("verifyNotAttributeFromAllWindows", attributeName, pattern);
   }

   protected void command_verifyNotBodyText(String pattern) {
      addCommand("verifyNotBodyText", pattern, null);
   }

   protected void command_verifyNotChecked(String locator) {
      addCommand("verifyNotChecked", locator, null);
   }

   protected void command_verifyNotConfirmation(String pattern) {
      addCommand("verifyNotConfirmation", pattern, null);
   }

   protected void command_verifyNotCookie(String pattern) {
      addCommand("verifyNotCookie", pattern, null);
   }

   protected void command_verifyNotCookieByName(String name, String pattern) {
      addCommand("verifyNotCookieByName", name, pattern);
   }

   protected void command_verifyNotCursorPosition(String locator, String pattern) {
      addCommand("verifyNotCursorPosition", locator, pattern);
   }

   protected void command_verifyNotEditable(String locator) {
      addCommand("verifyNotEditable", locator, null);
   }

   protected void command_verifyNotElementHeight(String locator, String pattern) {
      addCommand("verifyNotElementHeight", locator, pattern);
   }

   protected void command_verifyNotElementIndex(String locator, String pattern) {
      addCommand("verifyNotElementIndex", locator, pattern);
   }

   protected void command_verifyNotElementPositionLeft(String locator, String pattern) {
      addCommand("verifyNotElementPositionLeft", locator, pattern);
   }

   protected void command_verifyNotElementPositionTop(String locator, String pattern) {
      addCommand("verifyNotElementPositionTop", locator, pattern);
   }

   protected void command_verifyNotElementWidth(String locator, String pattern) {
      addCommand("verifyNotElementWidth", locator, pattern);
   }

   protected void command_verifyNotErrorOnNext(String message) {
      addCommand("verifyNotErrorOnNext", message, null);
   }

   protected void command_verifyNotEval(String script, String pattern) {
      addCommand("verifyNotEval", script, pattern);
   }

   protected void command_verifyNotExpression(String expression, String pattern) {
      addCommand("verifyNotExpression", expression, pattern);
   }

   protected void command_verifyNotFailureOnNext(String message) {
      addCommand("verifyNotFailureOnNext", message, null);
   }

   protected void command_verifyNotHtmlSource(String pattern) {
      addCommand("verifyNotHtmlSource", pattern, null);
   }

   protected void command_verifyNotLocation(String pattern) {
      addCommand("verifyNotLocation", pattern, null);
   }

   protected void command_verifyNotMouseSpeed(String pattern) {
      addCommand("verifyNotMouseSpeed", pattern, null);
   }

   protected void command_verifyNotOrdered(String locator1, String locator2) {
      addCommand("verifyNotOrdered", locator1, locator2);
   }

   protected void command_verifyNotPrompt(String pattern) {
      addCommand("verifyNotPrompt", pattern, null);
   }

   protected void command_verifyNotSelectOptions(String selectLocator, String pattern) {
      addCommand("verifyNotSelectOptions", selectLocator, pattern);
   }

   protected void command_verifyNotSelected(String selectLocator, String optionLocator) {
      addCommand("verifyNotSelected", selectLocator, optionLocator);
   }

   protected void command_verifyNotSelectedId(String selectLocator, String pattern) {
      addCommand("verifyNotSelectedId", selectLocator, pattern);
   }

   protected void command_verifyNotSelectedIds(String selectLocator, String pattern) {
      addCommand("verifyNotSelectedIds", selectLocator, pattern);
   }

   protected void command_verifyNotSelectedIndex(String selectLocator, String pattern) {
      addCommand("verifyNotSelectedIndex", selectLocator, pattern);
   }

   protected void command_verifyNotSelectedIndexes(String selectLocator, String pattern) {
      addCommand("verifyNotSelectedIndexes", selectLocator, pattern);
   }

   protected void command_verifyNotSelectedLabel(String selectLocator, String pattern) {
      addCommand("verifyNotSelectedLabel", selectLocator, pattern);
   }

   protected void command_verifyNotSelectedLabels(String selectLocator, String pattern) {
      addCommand("verifyNotSelectedLabels", selectLocator, pattern);
   }

   protected void command_verifyNotSelectedValue(String selectLocator, String pattern) {
      addCommand("verifyNotSelectedValue", selectLocator, pattern);
   }

   protected void command_verifyNotSelectedValues(String selectLocator, String pattern) {
      addCommand("verifyNotSelectedValues", selectLocator, pattern);
   }

   protected void command_verifyNotSomethingSelected(String selectLocator) {
      addCommand("verifyNotSomethingSelected", selectLocator, null);
   }

   protected void command_verifyNotSpeed(String pattern) {
      addCommand("verifyNotSpeed", pattern, null);
   }

   protected void command_verifyNotTable(String tableCellAddress, String pattern) {
      addCommand("verifyNotTable", tableCellAddress, pattern);
   }

   protected void command_verifyNotText(String locator, String pattern) {
      addCommand("verifyNotText", locator, pattern);
   }

   protected void command_verifyNotTitle(String pattern) {
      addCommand("verifyNotTitle", pattern, null);
   }

   protected void command_verifyNotValue(String locator, String pattern) {
      addCommand("verifyNotValue", locator, pattern);
   }

   protected void command_verifyNotVisible(String locator) {
      addCommand("verifyNotVisible", locator, null);
   }

   protected void command_verifyNotWhetherThisFrameMatchFrameExpression(String currentFrameString, String target) {
      addCommand("verifyNotWhetherThisFrameMatchFrameExpression", currentFrameString, target);
   }

   protected void command_verifyNotWhetherThisWindowMatchWindowExpression(String currentWindowString, String target) {
      addCommand("verifyNotWhetherThisWindowMatchWindowExpression", currentWindowString, target);
   }

   protected void command_verifyNotXpathCount(String xpath, String pattern) {
      addCommand("verifyNotXpathCount", xpath, pattern);
   }

   protected void command_verifyOrdered(String locator1, String locator2) {
      addCommand("verifyOrdered", locator1, locator2);
   }

   protected void command_verifyPrompt(String pattern) {
      addCommand("verifyPrompt", pattern, null);
   }

   protected void command_verifyPromptNotPresent() {
      addCommand("verifyPromptNotPresent", null, null);
   }

   protected void command_verifyPromptPresent() {
      addCommand("verifyPromptPresent", null, null);
   }

   protected void command_verifySelectOptions(String selectLocator, String pattern) {
      addCommand("verifySelectOptions", selectLocator, pattern);
   }

   protected void command_verifySelected(String selectLocator, String optionLocator) {
      addCommand("verifySelected", selectLocator, optionLocator);
   }

   protected void command_verifySelectedId(String selectLocator, String pattern) {
      addCommand("verifySelectedId", selectLocator, pattern);
   }

   protected void command_verifySelectedIds(String selectLocator, String pattern) {
      addCommand("verifySelectedIds", selectLocator, pattern);
   }

   protected void command_verifySelectedIndex(String selectLocator, String pattern) {
      addCommand("verifySelectedIndex", selectLocator, pattern);
   }

   protected void command_verifySelectedIndexes(String selectLocator, String pattern) {
      addCommand("verifySelectedIndexes", selectLocator, pattern);
   }

   protected void command_verifySelectedLabel(String selectLocator, String pattern) {
      addCommand("verifySelectedLabel", selectLocator, pattern);
   }

   protected void command_verifySelectedLabels(String selectLocator, String pattern) {
      addCommand("verifySelectedLabels", selectLocator, pattern);
   }

   protected void command_verifySelectedValue(String selectLocator, String pattern) {
      addCommand("verifySelectedValue", selectLocator, pattern);
   }

   protected void command_verifySelectedValues(String selectLocator, String pattern) {
      addCommand("verifySelectedValues", selectLocator, pattern);
   }

   protected void command_verifySomethingSelected(String selectLocator) {
      addCommand("verifySomethingSelected", selectLocator, null);
   }

   protected void command_verifySpeed(String pattern) {
      addCommand("verifySpeed", pattern, null);
   }

   protected void command_verifyTable(String tableCellAddress, String pattern) {
      addCommand("verifyTable", tableCellAddress, pattern);
   }

   protected void command_verifyText(String locator, String pattern) {
      addCommand("verifyText", locator, pattern);
   }

   protected void command_verifyTextNotPresent(String pattern) {
      addCommand("verifyTextNotPresent", pattern, null);
   }

   protected void command_verifyTextPresent(String pattern) {
      addCommand("verifyTextPresent", pattern, null);
   }

   protected void command_verifyTitle(String pattern) {
      addCommand("verifyTitle", pattern, null);
   }

   protected void command_verifyValue(String locator, String pattern) {
      addCommand("verifyValue", locator, pattern);
   }

   protected void command_verifyVisible(String locator) {
      addCommand("verifyVisible", locator, null);
   }

   protected void command_verifyWhetherThisFrameMatchFrameExpression(String currentFrameString, String target) {
      addCommand("verifyWhetherThisFrameMatchFrameExpression", currentFrameString, target);
   }

   protected void command_verifyWhetherThisWindowMatchWindowExpression(String currentWindowString, String target) {
      addCommand("verifyWhetherThisWindowMatchWindowExpression", currentWindowString, target);
   }

   protected void command_verifyXpathCount(String xpath, String pattern) {
      addCommand("verifyXpathCount", xpath, pattern);
   }

   protected void command_waitForAlert(String pattern) {
      addCommand("waitForAlert", pattern, null);
   }

   protected void command_waitForAlertNotPresent() {
      addCommand("waitForAlertNotPresent", null, null);
   }

   protected void command_waitForAlertPresent() {
      addCommand("waitForAlertPresent", null, null);
   }

   protected void command_waitForAllButtons(String pattern) {
      addCommand("waitForAllButtons", pattern, null);
   }

   protected void command_waitForAllFields(String pattern) {
      addCommand("waitForAllFields", pattern, null);
   }

   protected void command_waitForAllLinks(String pattern) {
      addCommand("waitForAllLinks", pattern, null);
   }

   protected void command_waitForAllWindowIds(String pattern) {
      addCommand("waitForAllWindowIds", pattern, null);
   }

   protected void command_waitForAllWindowNames(String pattern) {
      addCommand("waitForAllWindowNames", pattern, null);
   }

   protected void command_waitForAllWindowTitles(String pattern) {
      addCommand("waitForAllWindowTitles", pattern, null);
   }

   protected void command_waitForAttribute(String attributeLocator, String pattern) {
      addCommand("waitForAttribute", attributeLocator, pattern);
   }

   protected void command_waitForAttributeFromAllWindows(String attributeName, String pattern) {
      addCommand("waitForAttributeFromAllWindows", attributeName, pattern);
   }

   protected void command_waitForBodyText(String pattern) {
      addCommand("waitForBodyText", pattern, null);
   }

   protected void command_waitForChecked(String locator) {
      addCommand("waitForChecked", locator, null);
   }

   protected void command_waitForCondition(String script, String timeout) {
      addCommand("waitForCondition", script, timeout);
   }

   protected void command_waitForConfirmation(String pattern) {
      addCommand("waitForConfirmation", pattern, null);
   }

   protected void command_waitForConfirmationNotPresent() {
      addCommand("waitForConfirmationNotPresent", null, null);
   }

   protected void command_waitForConfirmationPresent() {
      addCommand("waitForConfirmationPresent", null, null);
   }

   protected void command_waitForCookie(String pattern) {
      addCommand("waitForCookie", pattern, null);
   }

   protected void command_waitForCookieByName(String name, String pattern) {
      addCommand("waitForCookieByName", name, pattern);
   }

   protected void command_waitForCookieNotPresent(String name) {
      addCommand("waitForCookieNotPresent", name, null);
   }

   protected void command_waitForCookiePresent(String name) {
      addCommand("waitForCookiePresent", name, null);
   }

   protected void command_waitForCursorPosition(String locator, String pattern) {
      addCommand("waitForCursorPosition", locator, pattern);
   }

   protected void command_waitForEditable(String locator) {
      addCommand("waitForEditable", locator, null);
   }

   protected void command_waitForElementHeight(String locator, String pattern) {
      addCommand("waitForElementHeight", locator, pattern);
   }

   protected void command_waitForElementIndex(String locator, String pattern) {
      addCommand("waitForElementIndex", locator, pattern);
   }

   protected void command_waitForElementNotPresent(String locator) {
      addCommand("waitForElementNotPresent", locator, null);
   }

   protected void command_waitForElementPositionLeft(String locator, String pattern) {
      addCommand("waitForElementPositionLeft", locator, pattern);
   }

   protected void command_waitForElementPositionTop(String locator, String pattern) {
      addCommand("waitForElementPositionTop", locator, pattern);
   }

   protected void command_waitForElementPresent(String locator) {
      addCommand("waitForElementPresent", locator, null);
   }

   protected void command_waitForElementWidth(String locator, String pattern) {
      addCommand("waitForElementWidth", locator, pattern);
   }

   protected void command_waitForErrorOnNext(String message) {
      addCommand("waitForErrorOnNext", message, null);
   }

   protected void command_waitForEval(String script, String pattern) {
      addCommand("waitForEval", script, pattern);
   }

   protected void command_waitForExpression(String expression, String pattern) {
      addCommand("waitForExpression", expression, pattern);
   }

   protected void command_waitForFailureOnNext(String message) {
      addCommand("waitForFailureOnNext", message, null);
   }

   protected void command_waitForFrameToLoad(String frameAddress, String timeout) {
      addCommand("waitForFrameToLoad", frameAddress, timeout);
   }

   protected void command_waitForHtmlSource(String pattern) {
      addCommand("waitForHtmlSource", pattern, null);
   }

   protected void command_waitForLocation(String pattern) {
      addCommand("waitForLocation", pattern, null);
   }

   protected void command_waitForMouseSpeed(String pattern) {
      addCommand("waitForMouseSpeed", pattern, null);
   }

   protected void command_waitForNotAlert(String pattern) {
      addCommand("waitForNotAlert", pattern, null);
   }

   protected void command_waitForNotAllButtons(String pattern) {
      addCommand("waitForNotAllButtons", pattern, null);
   }

   protected void command_waitForNotAllFields(String pattern) {
      addCommand("waitForNotAllFields", pattern, null);
   }

   protected void command_waitForNotAllLinks(String pattern) {
      addCommand("waitForNotAllLinks", pattern, null);
   }

   protected void command_waitForNotAllWindowIds(String pattern) {
      addCommand("waitForNotAllWindowIds", pattern, null);
   }

   protected void command_waitForNotAllWindowNames(String pattern) {
      addCommand("waitForNotAllWindowNames", pattern, null);
   }

   protected void command_waitForNotAllWindowTitles(String pattern) {
      addCommand("waitForNotAllWindowTitles", pattern, null);
   }

   protected void command_waitForNotAttribute(String attributeLocator, String pattern) {
      addCommand("waitForNotAttribute", attributeLocator, pattern);
   }

   protected void command_waitForNotAttributeFromAllWindows(String attributeName, String pattern) {
      addCommand("waitForNotAttributeFromAllWindows", attributeName, pattern);
   }

   protected void command_waitForNotBodyText(String pattern) {
      addCommand("waitForNotBodyText", pattern, null);
   }

   protected void command_waitForNotChecked(String locator) {
      addCommand("waitForNotChecked", locator, null);
   }

   protected void command_waitForNotConfirmation(String pattern) {
      addCommand("waitForNotConfirmation", pattern, null);
   }

   protected void command_waitForNotCookie(String pattern) {
      addCommand("waitForNotCookie", pattern, null);
   }

   protected void command_waitForNotCookieByName(String name, String pattern) {
      addCommand("waitForNotCookieByName", name, pattern);
   }

   protected void command_waitForNotCursorPosition(String locator, String pattern) {
      addCommand("waitForNotCursorPosition", locator, pattern);
   }

   protected void command_waitForNotEditable(String locator) {
      addCommand("waitForNotEditable", locator, null);
   }

   protected void command_waitForNotElementHeight(String locator, String pattern) {
      addCommand("waitForNotElementHeight", locator, pattern);
   }

   protected void command_waitForNotElementIndex(String locator, String pattern) {
      addCommand("waitForNotElementIndex", locator, pattern);
   }

   protected void command_waitForNotElementPositionLeft(String locator, String pattern) {
      addCommand("waitForNotElementPositionLeft", locator, pattern);
   }

   protected void command_waitForNotElementPositionTop(String locator, String pattern) {
      addCommand("waitForNotElementPositionTop", locator, pattern);
   }

   protected void command_waitForNotElementWidth(String locator, String pattern) {
      addCommand("waitForNotElementWidth", locator, pattern);
   }

   protected void command_waitForNotErrorOnNext(String message) {
      addCommand("waitForNotErrorOnNext", message, null);
   }

   protected void command_waitForNotEval(String script, String pattern) {
      addCommand("waitForNotEval", script, pattern);
   }

   protected void command_waitForNotExpression(String expression, String pattern) {
      addCommand("waitForNotExpression", expression, pattern);
   }

   protected void command_waitForNotFailureOnNext(String message) {
      addCommand("waitForNotFailureOnNext", message, null);
   }

   protected void command_waitForNotHtmlSource(String pattern) {
      addCommand("waitForNotHtmlSource", pattern, null);
   }

   protected void command_waitForNotLocation(String pattern) {
      addCommand("waitForNotLocation", pattern, null);
   }

   protected void command_waitForNotMouseSpeed(String pattern) {
      addCommand("waitForNotMouseSpeed", pattern, null);
   }

   protected void command_waitForNotOrdered(String locator1, String locator2) {
      addCommand("waitForNotOrdered", locator1, locator2);
   }

   protected void command_waitForNotPrompt(String pattern) {
      addCommand("waitForNotPrompt", pattern, null);
   }

   protected void command_waitForNotSelectOptions(String selectLocator, String pattern) {
      addCommand("waitForNotSelectOptions", selectLocator, pattern);
   }

   protected void command_waitForNotSelected(String selectLocator, String optionLocator) {
      addCommand("waitForNotSelected", selectLocator, optionLocator);
   }

   protected void command_waitForNotSelectedId(String selectLocator, String pattern) {
      addCommand("waitForNotSelectedId", selectLocator, pattern);
   }

   protected void command_waitForNotSelectedIds(String selectLocator, String pattern) {
      addCommand("waitForNotSelectedIds", selectLocator, pattern);
   }

   protected void command_waitForNotSelectedIndex(String selectLocator, String pattern) {
      addCommand("waitForNotSelectedIndex", selectLocator, pattern);
   }

   protected void command_waitForNotSelectedIndexes(String selectLocator, String pattern) {
      addCommand("waitForNotSelectedIndexes", selectLocator, pattern);
   }

   protected void command_waitForNotSelectedLabel(String selectLocator, String pattern) {
      addCommand("waitForNotSelectedLabel", selectLocator, pattern);
   }

   protected void command_waitForNotSelectedLabels(String selectLocator, String pattern) {
      addCommand("waitForNotSelectedLabels", selectLocator, pattern);
   }

   protected void command_waitForNotSelectedValue(String selectLocator, String pattern) {
      addCommand("waitForNotSelectedValue", selectLocator, pattern);
   }

   protected void command_waitForNotSelectedValues(String selectLocator, String pattern) {
      addCommand("waitForNotSelectedValues", selectLocator, pattern);
   }

   protected void command_waitForNotSomethingSelected(String selectLocator) {
      addCommand("waitForNotSomethingSelected", selectLocator, null);
   }

   protected void command_waitForNotSpeed(String pattern) {
      addCommand("waitForNotSpeed", pattern, null);
   }

   protected void command_waitForNotTable(String tableCellAddress, String pattern) {
      addCommand("waitForNotTable", tableCellAddress, pattern);
   }

   protected void command_waitForNotText(String locator, String pattern) {
      addCommand("waitForNotText", locator, pattern);
   }

   protected void command_waitForNotTitle(String pattern) {
      addCommand("waitForNotTitle", pattern, null);
   }

   protected void command_waitForNotValue(String locator, String pattern) {
      addCommand("waitForNotValue", locator, pattern);
   }

   protected void command_waitForNotVisible(String locator) {
      addCommand("waitForNotVisible", locator, null);
   }

   protected void command_waitForNotWhetherThisFrameMatchFrameExpression(String currentFrameString, String target) {
      addCommand("waitForNotWhetherThisFrameMatchFrameExpression", currentFrameString, target);
   }

   protected void command_waitForNotWhetherThisWindowMatchWindowExpression(String currentWindowString, String target) {
      addCommand("waitForNotWhetherThisWindowMatchWindowExpression", currentWindowString, target);
   }

   protected void command_waitForNotXpathCount(String xpath, String pattern) {
      addCommand("waitForNotXpathCount", xpath, pattern);
   }

   protected void command_waitForOrdered(String locator1, String locator2) {
      addCommand("waitForOrdered", locator1, locator2);
   }

   protected void command_waitForPageToLoad(String timeout) {
      addCommand("waitForPageToLoad", timeout, null);
   }

   protected void command_waitForPopUp(String windowID, String timeout) {
      addCommand("waitForPopUp", windowID, timeout);
   }

   protected void command_waitForPrompt(String pattern) {
      addCommand("waitForPrompt", pattern, null);
   }

   protected void command_waitForPromptNotPresent() {
      addCommand("waitForPromptNotPresent", null, null);
   }

   protected void command_waitForPromptPresent() {
      addCommand("waitForPromptPresent", null, null);
   }

   protected void command_waitForSelectOptions(String selectLocator, String pattern) {
      addCommand("waitForSelectOptions", selectLocator, pattern);
   }

   protected void command_waitForSelected(String selectLocator, String optionLocator) {
      addCommand("waitForSelected", selectLocator, optionLocator);
   }

   protected void command_waitForSelectedId(String selectLocator, String pattern) {
      addCommand("waitForSelectedId", selectLocator, pattern);
   }

   protected void command_waitForSelectedIds(String selectLocator, String pattern) {
      addCommand("waitForSelectedIds", selectLocator, pattern);
   }

   protected void command_waitForSelectedIndex(String selectLocator, String pattern) {
      addCommand("waitForSelectedIndex", selectLocator, pattern);
   }

   protected void command_waitForSelectedIndexes(String selectLocator, String pattern) {
      addCommand("waitForSelectedIndexes", selectLocator, pattern);
   }

   protected void command_waitForSelectedLabel(String selectLocator, String pattern) {
      addCommand("waitForSelectedLabel", selectLocator, pattern);
   }

   protected void command_waitForSelectedLabels(String selectLocator, String pattern) {
      addCommand("waitForSelectedLabels", selectLocator, pattern);
   }

   protected void command_waitForSelectedValue(String selectLocator, String pattern) {
      addCommand("waitForSelectedValue", selectLocator, pattern);
   }

   protected void command_waitForSelectedValues(String selectLocator, String pattern) {
      addCommand("waitForSelectedValues", selectLocator, pattern);
   }

   protected void command_waitForSomethingSelected(String selectLocator) {
      addCommand("waitForSomethingSelected", selectLocator, null);
   }

   protected void command_waitForSpeed(String pattern) {
      addCommand("waitForSpeed", pattern, null);
   }

   protected void command_waitForTable(String tableCellAddress, String pattern) {
      addCommand("waitForTable", tableCellAddress, pattern);
   }

   protected void command_waitForText(String locator, String pattern) {
      addCommand("waitForText", locator, pattern);
   }

   protected void command_waitForTextNotPresent(String pattern) {
      addCommand("waitForTextNotPresent", pattern, null);
   }

   protected void command_waitForTextPresent(String pattern) {
      addCommand("waitForTextPresent", pattern, null);
   }

   protected void command_waitForTitle(String pattern) {
      addCommand("waitForTitle", pattern, null);
   }

   protected void command_waitForValue(String locator, String pattern) {
      addCommand("waitForValue", locator, pattern);
   }

   protected void command_waitForVisible(String locator) {
      addCommand("waitForVisible", locator, null);
   }

   protected void command_waitForWhetherThisFrameMatchFrameExpression(String currentFrameString, String target) {
      addCommand("waitForWhetherThisFrameMatchFrameExpression", currentFrameString, target);
   }

   protected void command_waitForWhetherThisWindowMatchWindowExpression(String currentWindowString, String target) {
      addCommand("waitForWhetherThisWindowMatchWindowExpression", currentWindowString, target);
   }

   protected void command_waitForXpathCount(String xpath, String pattern) {
      addCommand("waitForXpathCount", xpath, pattern);
   }

   protected void command_windowFocus() {
      addCommand("windowFocus", null, null);
   }

   protected void command_windowFocusAndWait() {
      addCommand("windowFocusAndWait", null, null);
   }

   protected void command_windowMaximize() {
      addCommand("windowMaximize", null, null);
   }

   protected void command_windowMaximizeAndWait() {
      addCommand("windowMaximizeAndWait", null, null);
   }

}